import tensorflow as tf
gpu = tf.config.list_physical_devices('GPU')
tf.config.experimental.set_memory_growth(device=gpu[0], enable=True)

from src.model import get_model
import argparse as ap
from src.misc.test_models import test_models
import yaml

if __name__ == "__main__":
    parser = ap.ArgumentParser(description="Plots the trajectory generated by \
                                           different model for a given action \
                                           sequence file and model configs.",
                               formatter_class=ap.ArgumentDefaultsHelpFormatter)

    parser.add_argument('actionSequence',
                        help="File containing the action sequence to apply. \
                             The sequence should be formated by np.")

    parser.add_argument("groundTruth",
                        help="file containing the ground truth trajectory \
                             from the robot/simulator i na numpy format.")

    parser.add_argument("modelsConfig",
                        nargs='+',
                        help="A sequence of config files containing the \
                             models desctiptions. All the models will \
                             be propagated plotted.")

    parser.add_argument('-t',
                        '--time',
                        default=20,
                        help="Define the time interval of the simulation \
                             in seconds.")

    args = parser.parse_args()

    models = []
    for confFile in args.modelsConfig:
        with open(confFile, "r") as stream:
            conf = yaml.load(stream)
        models.append(get_model(conf, tf.Variable(1), 0.1, 13, 6, "auv_test"))

    test_models(args.actionSequence,
                args.groundTruth,
                models,
                ["auv_test"],
                args.time)